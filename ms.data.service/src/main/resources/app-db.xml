<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
	xmlns:task="http://www.springframework.org/schema/task"  
	>
    <!-- spring 只加载一个 property-placeholder， 如果有多个，则后边的会被忽略
                            解决办法: 如    classpath: *.properties -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
      <!-- 基本属性 url、user、password -->
      <property name="url" value="${url}" />
      <property name="username" value="${mysql.username}" />
      <property name="password" value="${mysql.password}" />
        
      <!-- 配置初始化大小、最小、最大 -->
      
      <property name="initialSize" value="${initialSize}" />
		<property name="maxActive" value="${maxActive}" />
		<property name="maxIdle" value="${maxIdle}" />
   <property name="minIdle" value="${minIdle}" />
      <!-- 配置获取连接等待超时的时间 -->
      <property name="maxWait" value="60000" />
   
      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
   <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
	
      <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />    
      <property name="validationQuery" value="${validationQuery}"/>
      <property name="defaultAutoCommit" value="${defaultAutoCommit}"/>
      <property name="testWhileIdle" value="true" />
      <property name="testOnBorrow" value="true" />
      <property name="testOnReturn" value="false" />
   
      <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
      <property name="poolPreparedStatements" value="false" />
<!--       <property name="maxPoolPreparedStatementPerConnectionSize" value="20" /> -->
      <!-- 配置监控统计拦截的filters -->
      <property name="filters" value="stat" /> 
  </bean>


	


	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:sqlmap/**/*Mapper.xml" />
	</bean>

   <bean id="MapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
                <!-- 这里的basePackage 指定了dao层接口路劲，这里的dao接口不用自己实现 -->  
                <property name="basePackage" value=" com.shanyuan.platform.ms.dao.*.mapper" />
                <!--   <property name="basePackage" value=" com.shanyuan.platform.ms.dao.user.mapper, com.shanyuan.platform.ms.dao.auth.mapper,com.shanyuan.platform.ms.dao.order.mapper,com.shanyuan.platform.ms.dao.store.mapper,com.shanyuan.platform.ms.dao.goods.mapper" /> -->  
               
        </bean>  
	 <bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<context:component-scan base-package="com.shanyuan.platform.ms.dao"></context:component-scan>
	  <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig" >  
         <property name="maxIdle" value="8" />  
         <property name="testOnBorrow" value="true" />  
   </bean >  
  <!-- redis服务器中心 -->  
   <bean id="connectionFactory"  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" >  
         <property name="poolConfig" ref="poolConfig" />  
         <property name="port" value="${redis.port}" />  
         <property name="hostName" value="${redis.host}" />  
         <property name="password" value="${redis.password}" />  
         <property name="timeout" value="${redis.timeout}" ></property>  
   </bean >  
   <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >  
         <property name="connectionFactory" ref="connectionFactory" />  
         <property name="keySerializer" >  
             <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
         </property>  
         <property name="valueSerializer" >  
             <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
         </property>  
   </bean >  
	 
	 
	
</beans>
