<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shanyuan.platform.ms.dao.statistics.mapper.OrderStatisticsOfflineBizOrderMapper" >
  <resultMap id="BaseResultMap" type="com.shanyuan.platform.ms.dao.statistics.entity.OrderStatisticsOfflineBizOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="main_order_id" property="mainOrderId" jdbcType="INTEGER" />
    <result column="buyer_id" property="buyerId" jdbcType="INTEGER" />
    <result column="buyer_name" property="buyerName" jdbcType="VARCHAR" />
    <result column="finished_time" property="finishedTime" jdbcType="INTEGER" />
    <result column="order_amount" property="orderAmount" jdbcType="DECIMAL" />
    <result column="circle_id_deep_1" property="circleIdDeep1" jdbcType="INTEGER" />
    <result column="circle_id_deep_2" property="circleIdDeep2" jdbcType="INTEGER" />
    <result column="circle_id_deep_3" property="circleIdDeep3" jdbcType="INTEGER" />
    <result column="circle_id_deep_4" property="circleIdDeep4" jdbcType="INTEGER" />
    <result column="circle_id_deep_5" property="circleIdDeep5" jdbcType="INTEGER" />
    <result column="circle_id_deep_6" property="circleIdDeep6" jdbcType="INTEGER" />
    <result column="circle_id_deep_7" property="circleIdDeep7" jdbcType="INTEGER" />
    <result column="circle_name" property="circleName" jdbcType="VARCHAR" />
    <result column="channel" property="channel" jdbcType="VARCHAR" />
    <result column="order_type" property="orderType" jdbcType="CHAR" />
    <result column="pay_state" property="payState" jdbcType="CHAR" />
    <result column="c_time" property="cTime" jdbcType="INTEGER" />
    <result column="help_price" property="helpPrice" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, main_order_id, buyer_id, buyer_name, finished_time, order_amount, circle_id_deep_1, 
    circle_id_deep_2, circle_id_deep_3, circle_id_deep_4, circle_id_deep_5, circle_id_deep_6, 
    circle_id_deep_7, circle_name, channel, order_type, pay_state, c_time, help_price
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shanyuan.platform.ms.dao.statistics.entity.OrderStatisticsOfflineBizOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from statistics_order_offline_biz_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from statistics_order_offline_biz_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from statistics_order_offline_biz_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shanyuan.platform.ms.dao.statistics.entity.OrderStatisticsOfflineBizOrderExample" >
    delete from statistics_order_offline_biz_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shanyuan.platform.ms.dao.statistics.entity.OrderStatisticsOfflineBizOrder" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into statistics_order_offline_biz_order (main_order_id, buyer_id, buyer_name, 
      finished_time, order_amount, circle_id_deep_1, 
      circle_id_deep_2, circle_id_deep_3, circle_id_deep_4, 
      circle_id_deep_5, circle_id_deep_6, circle_id_deep_7, 
      circle_name, channel, order_type, 
      pay_state, c_time, help_price
      )
    values (#{mainOrderId,jdbcType=INTEGER}, #{buyerId,jdbcType=INTEGER}, #{buyerName,jdbcType=VARCHAR}, 
      #{finishedTime,jdbcType=INTEGER}, #{orderAmount,jdbcType=DECIMAL}, #{circleIdDeep1,jdbcType=INTEGER}, 
      #{circleIdDeep2,jdbcType=INTEGER}, #{circleIdDeep3,jdbcType=INTEGER}, #{circleIdDeep4,jdbcType=INTEGER}, 
      #{circleIdDeep5,jdbcType=INTEGER}, #{circleIdDeep6,jdbcType=INTEGER}, #{circleIdDeep7,jdbcType=INTEGER}, 
      #{circleName,jdbcType=VARCHAR}, #{channel,jdbcType=VARCHAR}, #{orderType,jdbcType=CHAR}, 
      #{payState,jdbcType=CHAR}, #{cTime,jdbcType=INTEGER}, #{helpPrice,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.shanyuan.platform.ms.dao.statistics.entity.OrderStatisticsOfflineBizOrder" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into statistics_order_offline_biz_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="mainOrderId != null" >
        main_order_id,
      </if>
      <if test="buyerId != null" >
        buyer_id,
      </if>
      <if test="buyerName != null" >
        buyer_name,
      </if>
      <if test="finishedTime != null" >
        finished_time,
      </if>
      <if test="orderAmount != null" >
        order_amount,
      </if>
      <if test="circleIdDeep1 != null" >
        circle_id_deep_1,
      </if>
      <if test="circleIdDeep2 != null" >
        circle_id_deep_2,
      </if>
      <if test="circleIdDeep3 != null" >
        circle_id_deep_3,
      </if>
      <if test="circleIdDeep4 != null" >
        circle_id_deep_4,
      </if>
      <if test="circleIdDeep5 != null" >
        circle_id_deep_5,
      </if>
      <if test="circleIdDeep6 != null" >
        circle_id_deep_6,
      </if>
      <if test="circleIdDeep7 != null" >
        circle_id_deep_7,
      </if>
      <if test="circleName != null" >
        circle_name,
      </if>
      <if test="channel != null" >
        channel,
      </if>
      <if test="orderType != null" >
        order_type,
      </if>
      <if test="payState != null" >
        pay_state,
      </if>
      <if test="cTime != null" >
        c_time,
      </if>
      <if test="helpPrice != null" >
        help_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="mainOrderId != null" >
        #{mainOrderId,jdbcType=INTEGER},
      </if>
      <if test="buyerId != null" >
        #{buyerId,jdbcType=INTEGER},
      </if>
      <if test="buyerName != null" >
        #{buyerName,jdbcType=VARCHAR},
      </if>
      <if test="finishedTime != null" >
        #{finishedTime,jdbcType=INTEGER},
      </if>
      <if test="orderAmount != null" >
        #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="circleIdDeep1 != null" >
        #{circleIdDeep1,jdbcType=INTEGER},
      </if>
      <if test="circleIdDeep2 != null" >
        #{circleIdDeep2,jdbcType=INTEGER},
      </if>
      <if test="circleIdDeep3 != null" >
        #{circleIdDeep3,jdbcType=INTEGER},
      </if>
      <if test="circleIdDeep4 != null" >
        #{circleIdDeep4,jdbcType=INTEGER},
      </if>
      <if test="circleIdDeep5 != null" >
        #{circleIdDeep5,jdbcType=INTEGER},
      </if>
      <if test="circleIdDeep6 != null" >
        #{circleIdDeep6,jdbcType=INTEGER},
      </if>
      <if test="circleIdDeep7 != null" >
        #{circleIdDeep7,jdbcType=INTEGER},
      </if>
      <if test="circleName != null" >
        #{circleName,jdbcType=VARCHAR},
      </if>
      <if test="channel != null" >
        #{channel,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null" >
        #{orderType,jdbcType=CHAR},
      </if>
      <if test="payState != null" >
        #{payState,jdbcType=CHAR},
      </if>
      <if test="cTime != null" >
        #{cTime,jdbcType=INTEGER},
      </if>
      <if test="helpPrice != null" >
        #{helpPrice,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shanyuan.platform.ms.dao.statistics.entity.OrderStatisticsOfflineBizOrderExample" resultType="java.lang.Integer" >
    select count(*) from statistics_order_offline_biz_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update statistics_order_offline_biz_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.mainOrderId != null" >
        main_order_id = #{record.mainOrderId,jdbcType=INTEGER},
      </if>
      <if test="record.buyerId != null" >
        buyer_id = #{record.buyerId,jdbcType=INTEGER},
      </if>
      <if test="record.buyerName != null" >
        buyer_name = #{record.buyerName,jdbcType=VARCHAR},
      </if>
      <if test="record.finishedTime != null" >
        finished_time = #{record.finishedTime,jdbcType=INTEGER},
      </if>
      <if test="record.orderAmount != null" >
        order_amount = #{record.orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.circleIdDeep1 != null" >
        circle_id_deep_1 = #{record.circleIdDeep1,jdbcType=INTEGER},
      </if>
      <if test="record.circleIdDeep2 != null" >
        circle_id_deep_2 = #{record.circleIdDeep2,jdbcType=INTEGER},
      </if>
      <if test="record.circleIdDeep3 != null" >
        circle_id_deep_3 = #{record.circleIdDeep3,jdbcType=INTEGER},
      </if>
      <if test="record.circleIdDeep4 != null" >
        circle_id_deep_4 = #{record.circleIdDeep4,jdbcType=INTEGER},
      </if>
      <if test="record.circleIdDeep5 != null" >
        circle_id_deep_5 = #{record.circleIdDeep5,jdbcType=INTEGER},
      </if>
      <if test="record.circleIdDeep6 != null" >
        circle_id_deep_6 = #{record.circleIdDeep6,jdbcType=INTEGER},
      </if>
      <if test="record.circleIdDeep7 != null" >
        circle_id_deep_7 = #{record.circleIdDeep7,jdbcType=INTEGER},
      </if>
      <if test="record.circleName != null" >
        circle_name = #{record.circleName,jdbcType=VARCHAR},
      </if>
      <if test="record.channel != null" >
        channel = #{record.channel,jdbcType=VARCHAR},
      </if>
      <if test="record.orderType != null" >
        order_type = #{record.orderType,jdbcType=CHAR},
      </if>
      <if test="record.payState != null" >
        pay_state = #{record.payState,jdbcType=CHAR},
      </if>
      <if test="record.cTime != null" >
        c_time = #{record.cTime,jdbcType=INTEGER},
      </if>
      <if test="record.helpPrice != null" >
        help_price = #{record.helpPrice,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update statistics_order_offline_biz_order
    set id = #{record.id,jdbcType=INTEGER},
      main_order_id = #{record.mainOrderId,jdbcType=INTEGER},
      buyer_id = #{record.buyerId,jdbcType=INTEGER},
      buyer_name = #{record.buyerName,jdbcType=VARCHAR},
      finished_time = #{record.finishedTime,jdbcType=INTEGER},
      order_amount = #{record.orderAmount,jdbcType=DECIMAL},
      circle_id_deep_1 = #{record.circleIdDeep1,jdbcType=INTEGER},
      circle_id_deep_2 = #{record.circleIdDeep2,jdbcType=INTEGER},
      circle_id_deep_3 = #{record.circleIdDeep3,jdbcType=INTEGER},
      circle_id_deep_4 = #{record.circleIdDeep4,jdbcType=INTEGER},
      circle_id_deep_5 = #{record.circleIdDeep5,jdbcType=INTEGER},
      circle_id_deep_6 = #{record.circleIdDeep6,jdbcType=INTEGER},
      circle_id_deep_7 = #{record.circleIdDeep7,jdbcType=INTEGER},
      circle_name = #{record.circleName,jdbcType=VARCHAR},
      channel = #{record.channel,jdbcType=VARCHAR},
      order_type = #{record.orderType,jdbcType=CHAR},
      pay_state = #{record.payState,jdbcType=CHAR},
      c_time = #{record.cTime,jdbcType=INTEGER},
      help_price = #{record.helpPrice,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shanyuan.platform.ms.dao.statistics.entity.OrderStatisticsOfflineBizOrder" >
    update statistics_order_offline_biz_order
    <set >
      <if test="mainOrderId != null" >
        main_order_id = #{mainOrderId,jdbcType=INTEGER},
      </if>
      <if test="buyerId != null" >
        buyer_id = #{buyerId,jdbcType=INTEGER},
      </if>
      <if test="buyerName != null" >
        buyer_name = #{buyerName,jdbcType=VARCHAR},
      </if>
      <if test="finishedTime != null" >
        finished_time = #{finishedTime,jdbcType=INTEGER},
      </if>
      <if test="orderAmount != null" >
        order_amount = #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="circleIdDeep1 != null" >
        circle_id_deep_1 = #{circleIdDeep1,jdbcType=INTEGER},
      </if>
      <if test="circleIdDeep2 != null" >
        circle_id_deep_2 = #{circleIdDeep2,jdbcType=INTEGER},
      </if>
      <if test="circleIdDeep3 != null" >
        circle_id_deep_3 = #{circleIdDeep3,jdbcType=INTEGER},
      </if>
      <if test="circleIdDeep4 != null" >
        circle_id_deep_4 = #{circleIdDeep4,jdbcType=INTEGER},
      </if>
      <if test="circleIdDeep5 != null" >
        circle_id_deep_5 = #{circleIdDeep5,jdbcType=INTEGER},
      </if>
      <if test="circleIdDeep6 != null" >
        circle_id_deep_6 = #{circleIdDeep6,jdbcType=INTEGER},
      </if>
      <if test="circleIdDeep7 != null" >
        circle_id_deep_7 = #{circleIdDeep7,jdbcType=INTEGER},
      </if>
      <if test="circleName != null" >
        circle_name = #{circleName,jdbcType=VARCHAR},
      </if>
      <if test="channel != null" >
        channel = #{channel,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null" >
        order_type = #{orderType,jdbcType=CHAR},
      </if>
      <if test="payState != null" >
        pay_state = #{payState,jdbcType=CHAR},
      </if>
      <if test="cTime != null" >
        c_time = #{cTime,jdbcType=INTEGER},
      </if>
      <if test="helpPrice != null" >
        help_price = #{helpPrice,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shanyuan.platform.ms.dao.statistics.entity.OrderStatisticsOfflineBizOrder" >
    update statistics_order_offline_biz_order
    set main_order_id = #{mainOrderId,jdbcType=INTEGER},
      buyer_id = #{buyerId,jdbcType=INTEGER},
      buyer_name = #{buyerName,jdbcType=VARCHAR},
      finished_time = #{finishedTime,jdbcType=INTEGER},
      order_amount = #{orderAmount,jdbcType=DECIMAL},
      circle_id_deep_1 = #{circleIdDeep1,jdbcType=INTEGER},
      circle_id_deep_2 = #{circleIdDeep2,jdbcType=INTEGER},
      circle_id_deep_3 = #{circleIdDeep3,jdbcType=INTEGER},
      circle_id_deep_4 = #{circleIdDeep4,jdbcType=INTEGER},
      circle_id_deep_5 = #{circleIdDeep5,jdbcType=INTEGER},
      circle_id_deep_6 = #{circleIdDeep6,jdbcType=INTEGER},
      circle_id_deep_7 = #{circleIdDeep7,jdbcType=INTEGER},
      circle_name = #{circleName,jdbcType=VARCHAR},
      channel = #{channel,jdbcType=VARCHAR},
      order_type = #{orderType,jdbcType=CHAR},
      pay_state = #{payState,jdbcType=CHAR},
      c_time = #{cTime,jdbcType=INTEGER},
      help_price = #{helpPrice,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchBizOrderInsert" parameterType="map">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into statistics_order_offline_biz_order
		(main_order_id, buyer_id,
		buyer_name,
		finished_time,order_amount,circle_id_deep_1,
		circle_id_deep_2, circle_id_deep_3, circle_id_deep_4,
		circle_id_deep_5, circle_id_deep_6, circle_id_deep_7,
		circle_name, channel, order_type,
		pay_state, c_time,help_price)
		values 
		<foreach collection="records" item="item" index="index" separator=",">
        	(#{item.mainOrderId,jdbcType=INTEGER}, 
        	#{item.buyerId,jdbcType=INTEGER},
			#{item.buyerName,jdbcType=VARCHAR},
			#{item.finishedTime,jdbcType=INTEGER}, 
			#{item.orderAmount,jdbcType=DECIMAL}, 
			#{item.circleIdDeep1,jdbcType=INTEGER}, 
			#{item.circleIdDeep2,jdbcType=INTEGER},
			#{item.circleIdDeep3,jdbcType=INTEGER},
			#{item.circleIdDeep4,jdbcType=INTEGER}, 
			#{item.circleIdDeep5,jdbcType=INTEGER},
			 #{item.circleIdDeep6,jdbcType=INTEGER},
			#{item.circleIdDeep7,jdbcType=INTEGER},
			 #{item.circleName,jdbcType=VARCHAR},
			#{item.channel,jdbcType=VARCHAR},
			#{item.orderType,jdbcType=VARCHAR}, 
			#{item.payState,jdbcType=CHAR}, 
			#{item.cTime,jdbcType=INTEGER},
			#{item.helpPrice,jdbcType=DECIMAL})
		</foreach>
	</insert>
	<select id="getOfflineOrderStatisticsInofs" parameterType="map" resultType="com.shanyuan.platform.ms.dao.statistics.entity.OfflineStatisticsDomain">
		select c_time as cTime,sum(order_amount) OrderAmount,sum(help_price) helpPrice
		from statistics_order_offline_biz_order
		<if test="cTime != null" >
       	 	where c_time = #{cTime,jdbcType=INTEGER}
      	</if> 
		group by c_time
	</select>
</mapper>