<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shanyuan.platform.ms.dao.user.mapper.SyMessageMapper" >
  <resultMap id="BaseResultMap" type="com.shanyuan.platform.ms.dao.user.entity.SyMessage" >
    <id column="message_id" property="messageId" jdbcType="INTEGER" />
    <result column="message_parent_id" property="messageParentId" jdbcType="INTEGER" />
    <result column="from_member_id" property="fromMemberId" jdbcType="INTEGER" />
    <result column="to_member_id" property="toMemberId" jdbcType="VARCHAR" />
    <result column="message_title" property="messageTitle" jdbcType="VARCHAR" />
    <result column="message_body" property="messageBody" jdbcType="VARCHAR" />
    <result column="message_time" property="messageTime" jdbcType="VARCHAR" />
    <result column="message_update_time" property="messageUpdateTime" jdbcType="VARCHAR" />
    <result column="message_open" property="messageOpen" jdbcType="TINYINT" />
    <result column="message_state" property="messageState" jdbcType="TINYINT" />
    <result column="message_type" property="messageType" jdbcType="TINYINT" />
    <result column="read_member_id" property="readMemberId" jdbcType="VARCHAR" />
    <result column="del_member_id" property="delMemberId" jdbcType="VARCHAR" />
    <result column="message_ismore" property="messageIsmore" jdbcType="TINYINT" />
    <result column="from_member_name" property="fromMemberName" jdbcType="VARCHAR" />
    <result column="to_member_name" property="toMemberName" jdbcType="VARCHAR" />
    <result column="link_name" property="linkName" jdbcType="VARCHAR" />
    <result column="message_link" property="messageLink" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="count" property="count" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    message_id, message_parent_id, from_member_id, to_member_id, message_title, message_body, 
    message_time, message_update_time, message_open, message_state, message_type, read_member_id, 
    del_member_id, message_ismore, from_member_name, to_member_name, link_name, message_link, 
    order_id, count
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shanyuan.platform.ms.dao.user.entity.SyMessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sy_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sy_message
    where message_id = #{messageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sy_message
    where message_id = #{messageId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shanyuan.platform.ms.dao.user.entity.SyMessageExample" >
    delete from sy_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shanyuan.platform.ms.dao.user.entity.SyMessage" >
    insert into sy_message (message_id, message_parent_id, from_member_id, 
      to_member_id, message_title, message_body, 
      message_time, message_update_time, message_open, 
      message_state, message_type, read_member_id, 
      del_member_id, message_ismore, from_member_name, 
      to_member_name, link_name, message_link, 
      order_id, count)
    values (#{messageId,jdbcType=INTEGER}, #{messageParentId,jdbcType=INTEGER}, #{fromMemberId,jdbcType=INTEGER}, 
      #{toMemberId,jdbcType=VARCHAR}, #{messageTitle,jdbcType=VARCHAR}, #{messageBody,jdbcType=VARCHAR}, 
      #{messageTime,jdbcType=VARCHAR}, #{messageUpdateTime,jdbcType=VARCHAR}, #{messageOpen,jdbcType=TINYINT}, 
      #{messageState,jdbcType=TINYINT}, #{messageType,jdbcType=TINYINT}, #{readMemberId,jdbcType=VARCHAR}, 
      #{delMemberId,jdbcType=VARCHAR}, #{messageIsmore,jdbcType=TINYINT}, #{fromMemberName,jdbcType=VARCHAR}, 
      #{toMemberName,jdbcType=VARCHAR}, #{linkName,jdbcType=VARCHAR}, #{messageLink,jdbcType=VARCHAR}, 
      #{orderId,jdbcType=INTEGER}, #{count,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.shanyuan.platform.ms.dao.user.entity.SyMessage" >
    insert into sy_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="messageId != null" >
        message_id,
      </if>
      <if test="messageParentId != null" >
        message_parent_id,
      </if>
      <if test="fromMemberId != null" >
        from_member_id,
      </if>
      <if test="toMemberId != null" >
        to_member_id,
      </if>
      <if test="messageTitle != null" >
        message_title,
      </if>
      <if test="messageBody != null" >
        message_body,
      </if>
      <if test="messageTime != null" >
        message_time,
      </if>
      <if test="messageUpdateTime != null" >
        message_update_time,
      </if>
      <if test="messageOpen != null" >
        message_open,
      </if>
      <if test="messageState != null" >
        message_state,
      </if>
      <if test="messageType != null" >
        message_type,
      </if>
      <if test="readMemberId != null" >
        read_member_id,
      </if>
      <if test="delMemberId != null" >
        del_member_id,
      </if>
      <if test="messageIsmore != null" >
        message_ismore,
      </if>
      <if test="fromMemberName != null" >
        from_member_name,
      </if>
      <if test="toMemberName != null" >
        to_member_name,
      </if>
      <if test="linkName != null" >
        link_name,
      </if>
      <if test="messageLink != null" >
        message_link,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="count != null" >
        count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="messageId != null" >
        #{messageId,jdbcType=INTEGER},
      </if>
      <if test="messageParentId != null" >
        #{messageParentId,jdbcType=INTEGER},
      </if>
      <if test="fromMemberId != null" >
        #{fromMemberId,jdbcType=INTEGER},
      </if>
      <if test="toMemberId != null" >
        #{toMemberId,jdbcType=VARCHAR},
      </if>
      <if test="messageTitle != null" >
        #{messageTitle,jdbcType=VARCHAR},
      </if>
      <if test="messageBody != null" >
        #{messageBody,jdbcType=VARCHAR},
      </if>
      <if test="messageTime != null" >
        #{messageTime,jdbcType=VARCHAR},
      </if>
      <if test="messageUpdateTime != null" >
        #{messageUpdateTime,jdbcType=VARCHAR},
      </if>
      <if test="messageOpen != null" >
        #{messageOpen,jdbcType=TINYINT},
      </if>
      <if test="messageState != null" >
        #{messageState,jdbcType=TINYINT},
      </if>
      <if test="messageType != null" >
        #{messageType,jdbcType=TINYINT},
      </if>
      <if test="readMemberId != null" >
        #{readMemberId,jdbcType=VARCHAR},
      </if>
      <if test="delMemberId != null" >
        #{delMemberId,jdbcType=VARCHAR},
      </if>
      <if test="messageIsmore != null" >
        #{messageIsmore,jdbcType=TINYINT},
      </if>
      <if test="fromMemberName != null" >
        #{fromMemberName,jdbcType=VARCHAR},
      </if>
      <if test="toMemberName != null" >
        #{toMemberName,jdbcType=VARCHAR},
      </if>
      <if test="linkName != null" >
        #{linkName,jdbcType=VARCHAR},
      </if>
      <if test="messageLink != null" >
        #{messageLink,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        #{count,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shanyuan.platform.ms.dao.user.entity.SyMessageExample" resultType="java.lang.Integer" >
    select count(*) from sy_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sy_message
    <set >
      <if test="record.messageId != null" >
        message_id = #{record.messageId,jdbcType=INTEGER},
      </if>
      <if test="record.messageParentId != null" >
        message_parent_id = #{record.messageParentId,jdbcType=INTEGER},
      </if>
      <if test="record.fromMemberId != null" >
        from_member_id = #{record.fromMemberId,jdbcType=INTEGER},
      </if>
      <if test="record.toMemberId != null" >
        to_member_id = #{record.toMemberId,jdbcType=VARCHAR},
      </if>
      <if test="record.messageTitle != null" >
        message_title = #{record.messageTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.messageBody != null" >
        message_body = #{record.messageBody,jdbcType=VARCHAR},
      </if>
      <if test="record.messageTime != null" >
        message_time = #{record.messageTime,jdbcType=VARCHAR},
      </if>
      <if test="record.messageUpdateTime != null" >
        message_update_time = #{record.messageUpdateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.messageOpen != null" >
        message_open = #{record.messageOpen,jdbcType=TINYINT},
      </if>
      <if test="record.messageState != null" >
        message_state = #{record.messageState,jdbcType=TINYINT},
      </if>
      <if test="record.messageType != null" >
        message_type = #{record.messageType,jdbcType=TINYINT},
      </if>
      <if test="record.readMemberId != null" >
        read_member_id = #{record.readMemberId,jdbcType=VARCHAR},
      </if>
      <if test="record.delMemberId != null" >
        del_member_id = #{record.delMemberId,jdbcType=VARCHAR},
      </if>
      <if test="record.messageIsmore != null" >
        message_ismore = #{record.messageIsmore,jdbcType=TINYINT},
      </if>
      <if test="record.fromMemberName != null" >
        from_member_name = #{record.fromMemberName,jdbcType=VARCHAR},
      </if>
      <if test="record.toMemberName != null" >
        to_member_name = #{record.toMemberName,jdbcType=VARCHAR},
      </if>
      <if test="record.linkName != null" >
        link_name = #{record.linkName,jdbcType=VARCHAR},
      </if>
      <if test="record.messageLink != null" >
        message_link = #{record.messageLink,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.count != null" >
        count = #{record.count,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sy_message
    set message_id = #{record.messageId,jdbcType=INTEGER},
      message_parent_id = #{record.messageParentId,jdbcType=INTEGER},
      from_member_id = #{record.fromMemberId,jdbcType=INTEGER},
      to_member_id = #{record.toMemberId,jdbcType=VARCHAR},
      message_title = #{record.messageTitle,jdbcType=VARCHAR},
      message_body = #{record.messageBody,jdbcType=VARCHAR},
      message_time = #{record.messageTime,jdbcType=VARCHAR},
      message_update_time = #{record.messageUpdateTime,jdbcType=VARCHAR},
      message_open = #{record.messageOpen,jdbcType=TINYINT},
      message_state = #{record.messageState,jdbcType=TINYINT},
      message_type = #{record.messageType,jdbcType=TINYINT},
      read_member_id = #{record.readMemberId,jdbcType=VARCHAR},
      del_member_id = #{record.delMemberId,jdbcType=VARCHAR},
      message_ismore = #{record.messageIsmore,jdbcType=TINYINT},
      from_member_name = #{record.fromMemberName,jdbcType=VARCHAR},
      to_member_name = #{record.toMemberName,jdbcType=VARCHAR},
      link_name = #{record.linkName,jdbcType=VARCHAR},
      message_link = #{record.messageLink,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=INTEGER},
      count = #{record.count,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shanyuan.platform.ms.dao.user.entity.SyMessage" >
    update sy_message
    <set >
      <if test="messageParentId != null" >
        message_parent_id = #{messageParentId,jdbcType=INTEGER},
      </if>
      <if test="fromMemberId != null" >
        from_member_id = #{fromMemberId,jdbcType=INTEGER},
      </if>
      <if test="toMemberId != null" >
        to_member_id = #{toMemberId,jdbcType=VARCHAR},
      </if>
      <if test="messageTitle != null" >
        message_title = #{messageTitle,jdbcType=VARCHAR},
      </if>
      <if test="messageBody != null" >
        message_body = #{messageBody,jdbcType=VARCHAR},
      </if>
      <if test="messageTime != null" >
        message_time = #{messageTime,jdbcType=VARCHAR},
      </if>
      <if test="messageUpdateTime != null" >
        message_update_time = #{messageUpdateTime,jdbcType=VARCHAR},
      </if>
      <if test="messageOpen != null" >
        message_open = #{messageOpen,jdbcType=TINYINT},
      </if>
      <if test="messageState != null" >
        message_state = #{messageState,jdbcType=TINYINT},
      </if>
      <if test="messageType != null" >
        message_type = #{messageType,jdbcType=TINYINT},
      </if>
      <if test="readMemberId != null" >
        read_member_id = #{readMemberId,jdbcType=VARCHAR},
      </if>
      <if test="delMemberId != null" >
        del_member_id = #{delMemberId,jdbcType=VARCHAR},
      </if>
      <if test="messageIsmore != null" >
        message_ismore = #{messageIsmore,jdbcType=TINYINT},
      </if>
      <if test="fromMemberName != null" >
        from_member_name = #{fromMemberName,jdbcType=VARCHAR},
      </if>
      <if test="toMemberName != null" >
        to_member_name = #{toMemberName,jdbcType=VARCHAR},
      </if>
      <if test="linkName != null" >
        link_name = #{linkName,jdbcType=VARCHAR},
      </if>
      <if test="messageLink != null" >
        message_link = #{messageLink,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=BIGINT},
      </if>
    </set>
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shanyuan.platform.ms.dao.user.entity.SyMessage" >
    update sy_message
    set message_parent_id = #{messageParentId,jdbcType=INTEGER},
      from_member_id = #{fromMemberId,jdbcType=INTEGER},
      to_member_id = #{toMemberId,jdbcType=VARCHAR},
      message_title = #{messageTitle,jdbcType=VARCHAR},
      message_body = #{messageBody,jdbcType=VARCHAR},
      message_time = #{messageTime,jdbcType=VARCHAR},
      message_update_time = #{messageUpdateTime,jdbcType=VARCHAR},
      message_open = #{messageOpen,jdbcType=TINYINT},
      message_state = #{messageState,jdbcType=TINYINT},
      message_type = #{messageType,jdbcType=TINYINT},
      read_member_id = #{readMemberId,jdbcType=VARCHAR},
      del_member_id = #{delMemberId,jdbcType=VARCHAR},
      message_ismore = #{messageIsmore,jdbcType=TINYINT},
      from_member_name = #{fromMemberName,jdbcType=VARCHAR},
      to_member_name = #{toMemberName,jdbcType=VARCHAR},
      link_name = #{linkName,jdbcType=VARCHAR},
      message_link = #{messageLink,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=INTEGER},
      count = #{count,jdbcType=BIGINT}
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
</mapper>