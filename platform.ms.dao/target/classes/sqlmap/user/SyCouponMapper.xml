<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shanyuan.platform.ms.dao.user.mapper.SyCouponMapper" >
  <resultMap id="BaseResultMap" type="com.shanyuan.platform.ms.dao.user.entity.SyCoupon" >
    <id column="coupon_id" property="couponId" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="used_time" property="usedTime" jdbcType="INTEGER" />
    <result column="coupon_code" property="couponCode" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="INTEGER" />
    <result column="expired_time" property="expiredTime" jdbcType="INTEGER" />
    <result column="value" property="value" jdbcType="DECIMAL" />
    <result column="balance" property="balance" jdbcType="DECIMAL" />
    <result column="inv_id" property="invId" jdbcType="INTEGER" />
    <result column="coupon_batch_sn" property="couponBatchSn" jdbcType="BIGINT" />
    <result column="coupon_creator" property="couponCreator" jdbcType="VARCHAR" />
    <result column="creator_id" property="creatorId" jdbcType="INTEGER" />
    <result column="operator_id" property="operatorId" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    coupon_id, member_id, used_time, coupon_code, create_time, expired_time, value, balance, 
    inv_id, coupon_batch_sn, coupon_creator, creator_id, operator_id, start_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shanyuan.platform.ms.dao.user.entity.SyCouponExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sy_coupon
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sy_coupon
    where coupon_id = #{couponId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sy_coupon
    where coupon_id = #{couponId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.shanyuan.platform.ms.dao.user.entity.SyCouponExample" >
    delete from sy_coupon
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shanyuan.platform.ms.dao.user.entity.SyCoupon" >
    <selectKey resultType="java.lang.Integer" keyProperty="couponId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sy_coupon (member_id, used_time, coupon_code, 
      create_time, expired_time, value, 
      balance, inv_id, coupon_batch_sn, 
      coupon_creator, creator_id, operator_id, 
      start_time)
    values (#{memberId,jdbcType=INTEGER}, #{usedTime,jdbcType=INTEGER}, #{couponCode,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=INTEGER}, #{expiredTime,jdbcType=INTEGER}, #{value,jdbcType=DECIMAL}, 
      #{balance,jdbcType=DECIMAL}, #{invId,jdbcType=INTEGER}, #{couponBatchSn,jdbcType=BIGINT}, 
      #{couponCreator,jdbcType=VARCHAR}, #{creatorId,jdbcType=INTEGER}, #{operatorId,jdbcType=INTEGER}, 
      #{startTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.shanyuan.platform.ms.dao.user.entity.SyCoupon" >
    <selectKey resultType="java.lang.Integer" keyProperty="couponId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sy_coupon
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="usedTime != null" >
        used_time,
      </if>
      <if test="couponCode != null" >
        coupon_code,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="expiredTime != null" >
        expired_time,
      </if>
      <if test="value != null" >
        value,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="invId != null" >
        inv_id,
      </if>
      <if test="couponBatchSn != null" >
        coupon_batch_sn,
      </if>
      <if test="couponCreator != null" >
        coupon_creator,
      </if>
      <if test="creatorId != null" >
        creator_id,
      </if>
      <if test="operatorId != null" >
        operator_id,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="usedTime != null" >
        #{usedTime,jdbcType=INTEGER},
      </if>
      <if test="couponCode != null" >
        #{couponCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="expiredTime != null" >
        #{expiredTime,jdbcType=INTEGER},
      </if>
      <if test="value != null" >
        #{value,jdbcType=DECIMAL},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="invId != null" >
        #{invId,jdbcType=INTEGER},
      </if>
      <if test="couponBatchSn != null" >
        #{couponBatchSn,jdbcType=BIGINT},
      </if>
      <if test="couponCreator != null" >
        #{couponCreator,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null" >
        #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shanyuan.platform.ms.dao.user.entity.SyCouponExample" resultType="java.lang.Integer" >
    select count(*) from sy_coupon
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sy_coupon
    <set >
      <if test="record.couponId != null" >
        coupon_id = #{record.couponId,jdbcType=INTEGER},
      </if>
      <if test="record.memberId != null" >
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.usedTime != null" >
        used_time = #{record.usedTime,jdbcType=INTEGER},
      </if>
      <if test="record.couponCode != null" >
        coupon_code = #{record.couponCode,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.expiredTime != null" >
        expired_time = #{record.expiredTime,jdbcType=INTEGER},
      </if>
      <if test="record.value != null" >
        value = #{record.value,jdbcType=DECIMAL},
      </if>
      <if test="record.balance != null" >
        balance = #{record.balance,jdbcType=DECIMAL},
      </if>
      <if test="record.invId != null" >
        inv_id = #{record.invId,jdbcType=INTEGER},
      </if>
      <if test="record.couponBatchSn != null" >
        coupon_batch_sn = #{record.couponBatchSn,jdbcType=BIGINT},
      </if>
      <if test="record.couponCreator != null" >
        coupon_creator = #{record.couponCreator,jdbcType=VARCHAR},
      </if>
      <if test="record.creatorId != null" >
        creator_id = #{record.creatorId,jdbcType=INTEGER},
      </if>
      <if test="record.operatorId != null" >
        operator_id = #{record.operatorId,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sy_coupon
    set coupon_id = #{record.couponId,jdbcType=INTEGER},
      member_id = #{record.memberId,jdbcType=INTEGER},
      used_time = #{record.usedTime,jdbcType=INTEGER},
      coupon_code = #{record.couponCode,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=INTEGER},
      expired_time = #{record.expiredTime,jdbcType=INTEGER},
      value = #{record.value,jdbcType=DECIMAL},
      balance = #{record.balance,jdbcType=DECIMAL},
      inv_id = #{record.invId,jdbcType=INTEGER},
      coupon_batch_sn = #{record.couponBatchSn,jdbcType=BIGINT},
      coupon_creator = #{record.couponCreator,jdbcType=VARCHAR},
      creator_id = #{record.creatorId,jdbcType=INTEGER},
      operator_id = #{record.operatorId,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shanyuan.platform.ms.dao.user.entity.SyCoupon" >
    update sy_coupon
    <set >
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="usedTime != null" >
        used_time = #{usedTime,jdbcType=INTEGER},
      </if>
      <if test="couponCode != null" >
        coupon_code = #{couponCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="expiredTime != null" >
        expired_time = #{expiredTime,jdbcType=INTEGER},
      </if>
      <if test="value != null" >
        value = #{value,jdbcType=DECIMAL},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="invId != null" >
        inv_id = #{invId,jdbcType=INTEGER},
      </if>
      <if test="couponBatchSn != null" >
        coupon_batch_sn = #{couponBatchSn,jdbcType=BIGINT},
      </if>
      <if test="couponCreator != null" >
        coupon_creator = #{couponCreator,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null" >
        creator_id = #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="operatorId != null" >
        operator_id = #{operatorId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=INTEGER},
      </if>
    </set>
    where coupon_id = #{couponId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shanyuan.platform.ms.dao.user.entity.SyCoupon" >
    update sy_coupon
    set member_id = #{memberId,jdbcType=INTEGER},
      used_time = #{usedTime,jdbcType=INTEGER},
      coupon_code = #{couponCode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER},
      expired_time = #{expiredTime,jdbcType=INTEGER},
      value = #{value,jdbcType=DECIMAL},
      balance = #{balance,jdbcType=DECIMAL},
      inv_id = #{invId,jdbcType=INTEGER},
      coupon_batch_sn = #{couponBatchSn,jdbcType=BIGINT},
      coupon_creator = #{couponCreator,jdbcType=VARCHAR},
      creator_id = #{creatorId,jdbcType=INTEGER},
      operator_id = #{operatorId,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=INTEGER}
    where coupon_id = #{couponId,jdbcType=INTEGER}
  </update>
    <update id="updateBlance" parameterType="com.shanyuan.platform.ms.dao.user.entity.SyCoupon">
    UPDATE sy_coupon 
  	SET balance= balance -#{balance} , used_time =#{usedTime}
  		WHERE member_id=#{memberId}
  		AND coupon_code=#{couponCode} 
  		AND  balance <![CDATA[>=]]> #{balance}
  		
  </update>
  
  <!-- 冲正扶贫码 -->
   <update id="updateChongzhengCoupon" parameterType="com.shanyuan.platform.ms.dao.user.entity.SyCoupon">
    UPDATE sy_coupon 
	  	SET balance = balance + #{balance} 
	  		WHERE member_id = #{memberId}
	  		AND coupon_code = #{couponCode} 
  </update>
</mapper>