spring.application.name=zuul-gateway
server.port=8040
eureka.client.service-url.defaultZone=http://syplatform:syplatform01@192.168.1.10:8761/eureka/
eureka.instance.prefer-ip-address=true
management.security.enabled=false
security.user.name=syplatform
security.user.password=syplatform01

zuul.host.connect-timeout-millis=20000
zuul.host.max-per-route-connections=2000
zuul.host.socket-timeout-millis=20000
zuul.host.max-total-connections=10000
zuul.semaphore.max-semaphores=2000
ribbon.MaxConnectionsPerHost=1211
ribbon.MaxTotalConnections =2344

hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=20000
hystrix.command.default.execution.isolation.strategy=THREAD
ribbon.ConnectTimeout=20000
ribbon.ReadTimeout=20000
ribbon.MaxTotalHttpConnections=1000
ribbon.PoolMaxThreads=1000

    
##undertow 配置

 
# 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
server.undertow.io-threads=8
# 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
server.undertow.worker-threads=1000
# 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
# 每块buffer的空间大小,越小的空间被利用越充分
server.undertow.buffer-size=1024
# 每个区分配的buffer数量 , 所以pool的大小是buffer-size * buffers-per-region
server.undertow.buffers-per-region=1024
# 是否分配的直接内存
server.undertow.direct-buffers=true

spring.redis.database=0
spring.redis.host=127.0.0.1
spring.redis.post=6379
spring.redis.password=
spring.redis.timeout=0
spring.redis.pool.max-active=8
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.pool.max-wait=-1
