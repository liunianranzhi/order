spring.application.name=rs-deal-order
#mysqljdbc连接信息
#springboot会自动加载spring.datasource.*相关配置，数据源就会自动注入到sqlSessionFactory中，
#sqlSessionFactory会自动注入到Mapper中，对了你一切都不用管了，直接拿起来使用就行了。

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://192.168.1.183:3306/sy?useSSL=false
spring.datasource.username=root
spring.datasource.password=root
#spring.datasource.url=jdbc:mysql://t1.17shanyuan.com:3306/sy?useSSL=false

#spring.datasource.url=jdbc:mysql://rm-2ze09a2bb8605z03po.mysql.rds.aliyuncs.com:3306/sy?useSSL=false
#spring.datasource.username=syrs
#spring.datasource.password=vhX2Scd9jrpDbvui
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.max-active=20
spring.datasource.max-idle=8
spring.datasource.min-idle=8
spring.datasource.initial-size=10
#通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
 # 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=30000
spring.datasource.validationQuery=select 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
 # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,slf4j
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true

#mybatis
mybatis.type-aliases-package=syplatform.dao.entity
mybatis.mapper-locations=classpath:sqlmap/**/*Mapper.xml,classpath:sqlmap/*Mapper.xml

#mapper
#mappers多个接口时逗号隔开
#mapper.mappers=syplatform.util.MyMapper
#mapper.not-empty=false
mapper.identity=MYSQL

#pagehelper
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=20000
hystrix.command.default.execution.isolation.strategy=THREAD
hystrix.command.execution.isolation.thread.timeoutInMilliseconds=3000
hystrix.command.execution.isolation.semaphore.maxConcurrentRequests=800
#Redis
spring.redis.database=0
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=
spring.redis.timeout=0
spring.redis.pool.max-active=8
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.pool.max-wait=-1

server.port=9098

eureka.client.service-url.defaultZone=http://syplatform:syplatform01@192.168.1.183:8761/eureka/
eureka.instance.prefer-ip-address=true
management.security.enabled=false
#security.user.name=syplatform
#security.user.password=syplatform01
#客户端启动后是否自动注册
#spring.boot.admin.auto-registration=true
#spring.boot.admin.client.enabled=true
#客户端是否提供本机真实ip
#spring.boot.admin.client.prefer-ip=true
#Spring-Cloud监控中心地址
#spring.boot.admin.url=http://localhost:8762/sba
#客户端版本号，在监控中心显示
info.version=@project.version@
info.owner=Lee
################系统加载配置
myset.info.isdebug=true
myset.info.usewhite=true
myset.info.chnlIdAppBoc=boc
myset.info.protocol=https://
myset.info.host=localhost:8080
myset.info.vpath=
#测试服务器
myset.info.CIRCLE_ID_WEAL_ENTERPRISE=23435
myset.info.CIRCLE_ID_WEAL_CLUB=23436
#是否启用redis操作热数据
myset.info.use_redis_ops_data=true
#是否启用队列推送消息
myset.info.use_queue_push_message=true
myset.info.sms_sign=\u3010\u4e00\u8d77\u5584\u6e90\u3011
myset.info.useRedis=true
#当前环境 test, plan, pro, res
myset.info.curr_env=test
order.info.submitAsync=true
logging.file=classpath:logback.xml
#正式服务器
#益客俱乐部
#myset.info.CIRCLE_ID_WEAL_CLUB=12310
#//公益联盟企业
#myset.info.CIRCLE_ID_WEAL_ENTERPRISE=12309

myset.info.sharepoints=50
myset.info.DAAI_GC_ID=1149
key.info.smsapikey=b792c1883cd87e140859625a665e7069


key.info.android_appkey=591313dbf43e480f8500096d
key.info.android_appmastersecret=9yatyqx0e56ch379trtvakhdvdvtrrmm
key.info.ios_appkey=5926cedf04e2057b2500088f
key.info.ios_appmastersecret=r1lf4cykxstoausn3an5mdlxzm5lldtp


aliyun.mns.accessid=LTAInI6C9yvkd7G2
aliyun.mns.accesskey=kSY2XTCjB56uLDqhGrbTQVoCzgVARj
aliyun.mns.endpoint=https://1611121113350914.mns.cn-beijing.aliyuncs.com/
aliyun.ons.producerid=PID_lee_test

##undertow 配置

 
# 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
server.undertow.io-threads=8
# 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
server.undertow.worker-threads=1024
# 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
# 每块buffer的空间大小,越小的空间被利用越充分
server.undertow.buffer-size=1024
# 每个区分配的buffer数量 , 所以pool的大小是buffer-size * buffers-per-region
server.undertow.buffers-per-region=1024
# 是否分配的直接内存
server.undertow.direct-buffers=true

 

 

